jobs:
- job: Windows_Packaging_Pipeline
  variables:
    buildDirectory: '$(Build.BinariesDirectory)'
    buildConfig: 'RelWithDebInfo'
    buildArch: 'x64'
    buildAdditionalOptions: ''

  steps:
    - template: templates/set-test-data-variables-step.yml
    - template: templates/windows-build-tools-setup-steps.yml
      parameters:
        EnvSetupScript: 'setup_env.bat'
        buildArch: $(buildArch)

    - task: CmdLine@2
      displayName: 'Download test data and generate cmake config'
      inputs:
        script: |
          $(Build.BinariesDirectory)\packages\python\python.exe $(Build.SourcesDirectory)\tools\ci_build\build.py --config $(buildConfig) --build_dir $(Build.BinariesDirectory) --skip_submodule_sync --cmake_path $(Build.BinariesDirectory)\cmake\bin\cmake.exe --ctest_path $(Build.BinariesDirectory)\cmake\bin\ctest.exe --use_openmp  --build_shared_lib --enable_onnx_tests --test_data_url $(TestDataUrl) --test_data_checksum $(TestDataChecksum) --update
        workingDirectory: '$(Build.BinariesDirectory)'
    
    - task: CmdLine@1
      displayName: 'Download test data and generate cmake config'
      inputs:
        filename: '$(Build.BinariesDirectory)\packages\python\python.exe'
        arguments: '$(Build.SourcesDirectory)\tools\ci_build\build.py --config $(buildConfig) --build_dir $(Build.BinariesDirectory) --skip_submodule_sync --cmake_path $(Build.BinariesDirectory)\cmake\bin\cmake.exe --ctest_path $(Build.BinariesDirectory)\cmake\bin\ctest.exe --use_openmp  --build_shared_lib --enable_onnx_tests --test_data_url $(TestDataUrl) --test_data_checksum $(TestDataChecksum) --update'
        workingFoLder: "$(Build.BinariesDirectory)"


    - task: VSBuild@1
      displayName: 'Build $(buildConfig)'
      inputs:
        solution: '$(Build.BinariesDirectory)\$(buildConfig)\onnxruntime.sln'
        platform: $(buildArch)
        configuration: '$(buildConfig)'
        msbuildArgs: '/m'
        msbuildArchitecture: $(buildArch)
        logProjectEvents: true
        workingFolder: '$(Build.BinariesDirectory)\$(buildConfig)'

    - task: BatchScript@1
      displayName: 'Test $(buildConfig)'
      inputs:
        filename: '$(Build.BinariesDirectory)\packages\python\python.exe'
        arguments: '$(Build.SourcesDirectory)\tools\ci_build\build.py --config $(buildConfig) --build_dir $(Build.BinariesDirectory) --skip_submodule_sync --cmake_path $(Build.BinariesDirectory)\cmake\bin\cmake.exe --ctest_path $(Build.BinariesDirectory)\cmake\bin\ctest.exe  --use_openmp --build_shared_lib  --enable_onnx_tests --test_data_url $(TestDataUrl) --test_data_checksum $(TestDataChecksum) --test'
        workingFolder: "$(Build.BinariesDirectory)"

    - task: PublishTestResults@2
      displayName: 'Publish unit test results'
      inputs:
        testResultsFiles: '**\*.results.xml'
        searchFolder: '$(Build.BinariesDirectory)'
        testRunTitle: 'Unit Test Run'
      condition: succeededOrFailed()

    - task: CmdLine@2
      displayName: 'Copy build artifacts for zipping'
      inputs:
        script: |
          mkdir $(Build.BinariesDirectory)\onnxruntime-win-$(buildArch)
          # set ArtifactsRoot=$(Build.BinariesDirectory)\onnxruntime-win-x64
          mkdir $(Build.BinariesDirectory)\onnxruntime-win-$(buildArch)\lib
          mkdir $(Build.BinariesDirectory)\onnxruntime-win-$(buildArch)\include
          echo "Directories created"            
          copy $(Build.BinariesDirectory)\$(buildConfig)\$(buildConfig)\onnxruntime.dll $(Build.BinariesDirectory)\onnxruntime-win-$(buildArch)\lib
          copy $(Build.BinariesDirectory)\$(buildConfig)\$(buildConfig)\onnxruntime.lib $(Build.BinariesDirectory)\onnxruntime-win-$(buildArch)\lib
          copy $(Build.SourcesDirectory)\include\onnxruntime\core\session\onnxruntime_c_api.h  $(Build.BinariesDirectory)\onnxruntime-win-$(buildArch)\include
        workingDirectory: '$(Build.BinariesDirectory)\$(buildConfig)'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.BinariesDirectory)\onnxruntime-win-$(buildArch)' 
        includeRootFolder: true
        archiveType: 'zip' # Options: zip, 7z, tar, wim
        archiveFile: '$(Build.ArtifactStagingDirectory)\onnxruntime-win-$(buildArch).zip' 
        replaceExistingArchive: true 
      
    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)\onnxruntime-win-$(buildArch).zip' 
        artifactName: 'drop' 
    
    - template: templates/clean-agent-build-directory-step.yml


